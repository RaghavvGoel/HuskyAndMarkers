#!/usr/bin/env python
# license removed for brevity
import rospy
import array
from std_msgs.msg import String
from visualization_msgs.msg import *
import numpy
import matplotlib.pyplot as plt
from matplotlib import path
from math import *
import copy
from geometry_msgs.msg import PoseWithCovarianceStamped



NC = 0
nc = [ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,
         0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]


tasks = [ 0.,  3.,  0.,  1.,  3.,  3.,  3.,  0.,  0.,  0.,  0.,  0.,  0., 0.,  0.,  0.,  0.,  0.,  0.,  0.,  3.,  1.,  0.,  0.,  0.]
#tasks = []


sep = [ 0., 60., 60.,  0.,  0., 60.,  0.,  0.,  0.,  0., 60.,  0., 18.,
        1.,  0.,  0., 60.,  0.,  1.,  0.,  0.,  0.,  0., 22.,  0.]

t = [ 150.02614021,   96.17619014,   87.79919815,   97.59782314,
          92.19215989,  106.39777994,   62.99979305,  116.29483795,
          76.69359708,   64.89815617,  126.79703498,   87.59258008,
         150.00266194,  134.09198403,   90.59313893,   76.19863582,
          88.88919592,  144.49926305,  101.70020103,  150.00050306,
         140.19562793,   99.79937983,  129.09876513,  125.19955301,
          82.70063114]









x1 = [-63., -42., -11., -11., -86., -30.,  -5.,  -8., -19., -17., -92.,-73., -14., -60., -97., -63., -67., -85., -31., -51., -76., -61.,-46., -80., -22.] 

y1 = [-91., -66., -75.,  -5., -70., -46.,  92., -70., -66.,  -2., -66.,-62., -62., -89., -26., -95., -66., -28., -18., -42.,  -6., -98.,-55., -67., -91.]

x2 = [ 23.,   0.,  46.,  45.,  79.,   2.,  24.,  98.,  92.,  96.,  97.,63.,  73.,  76.,  55.,  72.,  25.,  40.,  58.,  90.,  23.,  95.,57.,  88.,  59.]

y2 = [ 27.,  98.,  75.,  95.,  85.,  53.,  12.,   4.,  94.,  53.,  16.,80.,  42.,   0.,  19.,  46.,  74.,  36.,  55.,  47.,  89.,  92.,52.,  39.,  27.]

x = [ 60., -82.,  14.,  81., -23.,  98.,  51.,  70.,  65., -51., -37.,38.,  39.,  31.,  30.,  36.,   0.,   9.,  96.,  52.,  66.,  43.,-84.,  34.,  95.]

y = [ 96.,   1.,  28., -90.,  35.,  85., -24.,  74., -29.,  88.,  62.,-98.,  87.,  87.,  87., -32.,   7.,  89.,  86.,  91.,  55.,  53.,99.,  69.,  70.]




N = numpy.size(t)
print("N : " , N)

# t1 = 0; t2 = 0; t3 = 0;
# for i in tasks:
#     if(i == 1):
#         t1 = t1 + 1;
#     elif(i == 2):
#         t2+=1
#     elif(i == 3):
#         t1+=1 ; t2+=1;
#     elif(i == 4):
#         t3+=1;        

tot = 0
for i in range(len(nc)):
    if(nc[i] == 1):
        NC = NC + 1;

for i in range(len(nc)):
    if(nc[i] != 1):
        #if(sep[i] < 30):
        #tot = tot + 30
        #else:
        tot = tot + t[i]  

mean = tot/(N-NC)
Tsplit = 0 #;
mean = mean - Tsplit

std = 0;
for i in range(len(nc)):
    if(nc[i] != 1):
        std = std + pow(t[i] - Tsplit - mean,2)

std = pow(std/(N-NC),0.5)        

#print("t1: " , t1 , " t2: " , t2 , " t3 " , t3)
print("average time: " , mean)
print("not completed " , NC  )
print("std: " , std)

net_dist1 = 0
net_dist2 = 0
D1 = numpy.zeros((1,len(x)))
D2 = numpy.zeros((1,len(x)))
for i in range(len(x)):
    D1[0][i] = numpy.linalg.norm(numpy.asarray([x1[i],y1[i]]).reshape(1,2) - numpy.asarray([x[i],y[i]]).reshape(1,2) , axis = 1)
    D2[0][i] = numpy.linalg.norm(numpy.asarray([x2[i],y2[i]]).reshape(1,2) - numpy.asarray([x[i],y[i]]).reshape(1,2) , axis = 1)
    #net_dist1 = net_dist1 + D1[i]
    #net_dist2 = net_dist2 + D2[i]


print("AVERG DIST " )
print("from1 : " , numpy.average(D1))
print("from2 : " , numpy.average(D2))
#NC = numpy.size(numpy.where(nc == 1.0)) # not completed
#p = numpy.zeros((1,(N)))

#print("NC: " , NC)










# thresh = 400
# j = 0;       
# c = 0
# for i in range(N):
#     if(nc[i] != 1):
#         p[0][j] = t[i];
#         j = j+1;
#     else:
#         print("i : " , i)
#         c = c + 1;    

# print("c : " , c)
# print("sum of p : " , numpy.sum(p))
# print("avg t = " , numpy.sum(p)/(N-NC))



# st = 0;
# mean = numpy.sum(p)/(N-NC)
# print("mean: " , mean)
# for i in range(numpy.size(p)):
#     st = st + pow(p[0][i] - mean,2) 

# final_st = pow(st/N-NC,0.5)


# print("st: " , final_st)



# MC = 25
# start_time = numpy.zeros((1,MC))
# stop_time = numpy.zeros((1,MC))
# split_time = numpy.zeros((1,MC))
# diff = numpy.zeros((1,MC))
# dest1_arr = numpy.zeros((2,MC))
# dest2_arr = numpy.zeros((2,MC))
# dest_arr = numpy.zeros((2,MC))
# split_diff = numpy.zeros((1,MC))
# not_complete = numpy.zeros((1,MC))
# for mc1 in range(MC):

#     Ax = 100
#     Ay = 500
#     ACx = 200
#     dx1 = numpy.random.randint(Ax,size = 1)
#     dy1 = numpy.random.randint(Ay,size = 1)
#     dx2 = numpy.random.randint(Ax,size = 1)
#     dy2 = numpy.random.randint(Ay,size = 1)
    
#     dx3 = numpy.random.randint(ACx,size = 1)
#     dy3 = numpy.random.randint(Ay,size = 1)    
    
#     dx1 = dx1 - 150;
#     dy1 = dy1 - 250;

#     dx2 = dx2 + 150;
#     dy2 = dy2 - 250;

#     dy3 = dy3 - 250;
#     dx3 = dx3 - 100

    
#     destination1 = [dx1[0],dy1[0]]
#     destination2 = [dx2[0],dy2[0]]
    
#     destination=[dx3[0],dy3[0]] #destination


#     dest1_arr[0][mc1] = destination1[0]
#     dest1_arr[1][mc1] = destination1[1]

#     dest2_arr[0][mc1] = destination2[0]
#     dest2_arr[1][mc1] = destination2[1]

#     dest_arr[0][mc1] = dx3[0]
#     dest_arr[1][mc1] = dy3[0]


# print("Final Destinations: " )    
# print("dest1: " ,)
# print( dest1_arr)
# print("++++++++++++++++++++++++++++++++++++++")
# print("dest2: " ,)
# print( dest2_arr)
# print("++++++++++++++++++++++++++++++++++++++")
# print("dest: " ,) 
# print(dest_arr)    
# print("++++++++++++++++++++++++++++++++++++++")



# ('dest1: ', array([[-63., -42., -11., -11., -86., -30.,  -5.,  -8., -19., -17., -92.,
#         -73., -14., -60., -97., -63., -67., -85., -31., -51., -76., -61.,
#         -46., -80., -22.],
#        [-91., -66., -75.,  -5., -70., -46.,  92., -70., -66.,  -2., -66.,
#         -62., -62., -89., -26., -95., -66., -28., -18., -42.,  -6., -98.,
#         -55., -67., -91.]]))
# ++++++++++++++++++++++++++++++++++++++
# ('dest2: ', array([[ 23.,   0.,  46.,  45.,  79.,   2.,  24.,  98.,  92.,  96.,  97.,
#          63.,  73.,  76.,  55.,  72.,  25.,  40.,  58.,  90.,  23.,  95.,
#          57.,  88.,  59.],
#        [ 27.,  98.,  75.,  95.,  85.,  53.,  12.,   4.,  94.,  53.,  16.,
#          80.,  42.,   0.,  19.,  46.,  74.,  36.,  55.,  47.,  89.,  92.,
#          52.,  39.,  27.]]))
# ++++++++++++++++++++++++++++++++++++++
# ('dest: ', array([[ 60., -82.,  14.,  81., -23.,  98.,  51.,  70.,  65., -51., -37.,
#          38.,  39.,  31.,  30.,  36.,   0.,   9.,  96.,  52.,  66.,  43.,
#         -84.,  34.,  95.],
#        [ 96.,   1.,  28., -90.,  35.,  85., -24.,  74., -29.,  88.,  62.,
#         -98.,  87.,  87.,  87., -32.,   7.,  89.,  86.,  91.,  55.,  53.,
#          99.,  69.,  70.]]))
# ++++++++++++++++++++++++++++++++++++++

# [-63., -42., -11., -11., -86., -30.,  -5.,  -8., -19., -17., -92.,-73., -14., -60., -97., -63., -67., -85., -31., -51., -76., -61.,-46., -80., -22.]

# [-91., -66., -75.,  -5., -70., -46.,  92., -70., -66.,  -2., -66.,-62., -62., -89., -26., -95., -66., -28., -18., -42.,  -6., -98.,-55., -67., -91.]

# [ 23.,   0.,  46.,  45.,  79.,   2.,  24.,  98.,  92.,  96.,  97.,63.,  73.,  76.,  55.,  72.,  25.,  40.,  58.,  90.,  23.,  95.,57.,  88.,  59.]

# [ 27.,  98.,  75.,  95.,  85.,  53.,  12.,   4.,  94.,  53.,  16.,80.,  42.,   0.,  19.,  46.,  74.,  36.,  55.,  47.,  89.,  92.,52.,  39.,  27.]

# [ 60., -82.,  14.,  81., -23.,  98.,  51.,  70.,  65., -51., -37.,38.,  39.,  31.,  30.,  36.,   0.,   9.,  96.,  52.,  66.,  43.,-84.,  34.,  95.]

# [ 96.,   1.,  28., -90.,  35.,  85., -24.,  74., -29.,  88.,  62.,-98.,  87.,  87.,  87., -32.,   7.,  89.,  86.,  91.,  55.,  53.,99.,  69.,  70.]




#Final Destinations: 
#('dest1: ',)
# destination1x = [-417. -450. -331. -323. -455. -482. -444. -373. -403. -356. -455. -454.
#   -473. -311. -487. -485. -363. -335. -442. -426. -418. -324. -311. -305.
#   -423.]
# destination1y = [ 138. -242.  -18. -172.  -25.  217.  209.  -14. -113. -128.   67.  -93.
#   -117.   53. -247.  226.  139.  -98.  117. -170.   19.   28.   75.   54.
#    134.]

# #('dest2: ',)
# destination2x = [ 396.  407.  477.  316.  341.  423.  352.  356.  315.  414.  406.  354.
#    376.  483.  388.  392.  380.  389.  404.  390.  457.  444.  487.  367.
#    344.]
# destination2y = [-127. -120.   84. -142.   18. -152. -150.  195.  135.   53.   -1.   87.
#    248.  135. -143.  222.  -26.  171. -143.  -86.  148.  143. -156.   32.
#     51.]


# destinationx = [  41.  -53.   12.   66. -136.  161.  -23.  122. -195.  179.   45. -131.
#    103.  -78.  -51.  155.   45.   26.   84. -200.  -55.  -22. -182.  181.
#    -54.]
# destinationy =  [ 234.  196. -119.  163. -208. -195.  -33.   22. -144. -187. -136.  162.
#     58.  -22.  236. -126.  200.   48.   73.   91.   23.   37. -106.   43.
#    183.]

